services:
  postgres:
    image: postgres:15-alpine
    environment:
      POSTGRES_DB: telegramdb
      POSTGRES_USER: torevar
      POSTGRES_PASSWORD: hesoyam
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U torevar -d telegramdb"]
      interval: 10s
      timeout: 5s
      retries: 5

  web:
    build: 
      context: .
      dockerfile: Dockerfile
    ports:
      - "5000:5000"
    env_file:
      - .env
    environment:
      DATABASE_URL: postgresql://torevar:hesoyam@postgres:5432/telegramdb
      DOCKER_BUILDKIT: 0
    depends_on:
      postgres:
        condition: service_healthy
    command: gunicorn --bind 0.0.0.0:5000 --reload main:app
    volumes:
      - .:/app
      - app_data:/app/data
      - static_files:/app/static

  bot:
    build: 
      context: .
      dockerfile: Dockerfile
    env_file:
      - .env
    environment:
      DATABASE_URL: postgresql://torevar:hesoyam@postgres:5432/telegramdb
      DOCKER_BUILDKIT: 0
    depends_on:
      postgres:
        condition: service_healthy
    command: python standalone_bot.py
    volumes:
      - .:/app
      - app_data:/app/data
      - static_files:/app/static

volumes:
  postgres_data:
  app_data:
  static_files: